<link rel="stylesheet" href="{eval_code(WEB_PATH)}js/zpcal/themes/sexy_net.css" />
<!--link rel="stylesheet" href="{eval_code(WEB_PATH)}js/zpcal/themes/winter.css" /-->
<script type="text/javascript" src="{eval_code(WEB_PATH)}js/zpcal/src/utils.js"></script>
<script type="text/javascript" src="{eval_code(WEB_PATH)}js/zpcal/src/calendar.js"></script>
<script type="text/javascript" src="{eval_code(WEB_PATH)}js/zpcal/src/calendar-setup.js"></script>
<script type="text/javascript" src="{eval_code(WEB_PATH)}js/zpcal/lang/calendar-{conf('language')}.js"></script>

<script type="text/javascript">
<!--
	var selected_days			= "{selected_days}"; 			// ex. "02/02/2006,02/22/2006,02/23/2006"
	var cur_date				= "{cur_date}";					// ex. "05/13/2006"
	var range_start				= {range_start} || 2003.01;		// ex. 2003.01
	var range_end				= {range_end}	|| 2020.12;		// ex. 2020.12
	var cal_container_id		= "{cal_container_id}"; 		// ex. cal1Container
	var on_select_location		= "{on_select_link}"; 			// ex. http://somepath?date=
-->
</script>
<script type="text/javascript">//<![CDATA[
	var arr_special_days = new Array();

	function set_key(strDateIn) {
		var strDate = strDateIn;
		if (isNaN(Date.parse(strDate))) {
			// see if we can fix any invalid chars
			strDate = strDate.replace(/[^0-9A-Za-z ]/g, " ");
		} else if (Zapatec.is_opera) {
			if (typeof strDate == "string") {
				strDate = strDate.replace(/[^0-9A-Za-z ]/g, " ");
			}
		}
		strDate = strDate.replace(/\s/g, "/");
		if (isNaN(Date.parse(strDate)))	{
			alert("ERR:"+strDate+" not a valid date");
			return false;
		}
		var d = new Date(strDate);
		// Make sure TIME is zero.  We just want the dates
		d.setHours(0,0,0,0);
		return d;
	}

	function add_special_day(strDate, strDesc) {
		arr_special_days[set_key(strDate)] = strDesc;
	}

	function add_special_days_from_string(str_dates) {
		try {
			var days_array = str_dates.split(",");
			for (cur_day in days_array) {
				add_special_day(days_array[cur_day], " ");
			}
		} catch (e) {}
	}
	// the function to call, true to disable, false to enable
	function dateOutOfRange(date) {
		var dateSelected = new Date(date);
		dateSelected.setHours(0,0,0,0);
		return !arr_special_days[dateSelected];
	}

	function flatCalendarCallback(cal) {
		if (cal.dateClicked) {
			var url = on_select_location.replace(/{id}/i, cal.date.print("%Y-%m-%d"));
//			alert("Jumping to: " + url + " (not really).");
			window.location = url;
		}
	};
//]]></script>
<script type="text/javascript">//<![CDATA[

	function init_zpcal() {
		try {
			if (isNaN(cur_date)) {
				add_special_day(cur_date, " ");
			}
			if (isNaN(selected_days)) {
				add_special_days_from_string(selected_days);
			}
			Zapatec.Calendar.setup({
				weekNumbers		: false,
				showOthers		: true,
				step			: 1,
				range			: [range_start, range_end],
				date			: cur_date,
				disableFunc		: dateOutOfRange, 
				flat			: cal_container_id,
				flatCallback	: flatCalendarCallback,
				noHelp			: true
			});
		} catch (e) {}
	}
//]]></script>
<script type="text/javascript">
<!--
	try {window.onload = init_zpcal;} catch (e) {alert('something wrong with calendar')}
-->
</script>