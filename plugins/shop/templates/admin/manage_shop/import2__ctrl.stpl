<script>

ng_app_admin.factory( 'Uploader', function( ApiConfig, $q, $rootScope, $window, $log ) {
	var service = {};
	service.response = {};
	var _parse_response = function( xhr ) {
		var json_text    = xhr.responseText;
		var result       = angular.fromJson( json_text );
		service.response = result;
	};
	service.upload = function( options ) {
		var url  = options.url || ApiConfig.url.upload || $window.location.href;
		if( !url ) {
			$log.log( 'Uploader error: "url" is empty.' );
			return( false );
		}
		var name = options.name || 'file';
		var file = options.file;
		if( !file ) { return( false ); }
		var $scope = options.$scope;
		var deferred = $q.defer(),
		xhr = new XMLHttpRequest();
		xhr.onreadystatechange = function( result ) {
			if( 4 === this.readyState ) {
				if( xhr.status == 200 ) {
					$rootScope.$apply( function() {
						_parse_response( xhr );
						deferred.resolve({ options: options, xhr: xhr, response: service.response });
					}, true );
				} else {
					$rootScope.$apply( function() {
						deferred.reject({ options: options, xhr: xhr, response: service.response });
					}, true );
				}
			}
		}
		xhr.onerror = function( r ) {
			$rootScope.$apply( function() {
				_parse_response( xhr );
				deferred.reject({ options: options, xhr: xhr, response: service.response });
			}, true );
		}
		if( options.onprogress ) {
			xhr.upload.onprogress = options.onprogress;
		}
		formdata = new FormData();
			formdata.append( name, file, file.name );
		xhr.open( 'POST', url, true );
		xhr.send( formdata );
		return( deferred.promise );
	};
	return( service );
});

ng_app_admin.factory( 'UploadApi',  function( ApiConfig, $resource, $window, $log ) {
	var service = {};
	service.url_list = ApiConfig.url.upload_list || $window.location.href;
	service.url_item = ApiConfig.url.upload_item || $window.location.href;
	service.resource = $resource( service.url, {}, {
		list__remove_all : { method : 'POST', url : service.url_list, params : { sub_action : 'remove_all' } },
		item__get        : { method : 'GET',  url : service.url_item, params : { sub_action : 'get' } },
		item__import     : { method : 'POST', url : service.url_item, params : { sub_action : 'import' } },
	});
	service.list__remove_all = function() {
		return( service.resource.list__remove_all() );
	};
	service.item__get = function( id ) {
		return( service.resource.item__get({ id: id }) );
	};
	service.item__import = function( id ) {
		return( service.resource.item__import({ data: data }) );
	};
	return( service );
});

ng_app_admin.directive( 'fileUpload', function( ApiConfig, Uploader, $parse, $window, $log ) {
	return {
		restrict: 'AE',
		link: function( $scope, element, attrs ) {
			// init vars
			var url          = ApiConfig.url.upload || $window.location.href;
			var text_select  = attrs.placeholder || 'Выберете файл...';
			var file_name    = '';
			var file_size    = 0;
			var file         = {};
			var $file_upload = element.children( '.ngfu-upload-file'   ).first();
			var $btn_upload  = element.children( '.ngfu-upload-button' ).first();
			$scope.message   = text_select;
			// show message
			$scope.show_message = function( message ) {
				var show_status = $scope.$eval( attrs[ 'showStatus' ] ) || false;
				if( show_status && message ) {
					$scope.message = message;
				}
			};
			// init events
			var onChange = function( event ) {
				var $this = event.target;
				var files = $this.files;
				if( files.length > 0 ) {
					$scope.show_message( files.name );
					$scope.$apply( function() {
						onUpload({ 'url': url, 'files': files, 'name': name });
					})
				}
				$this.value = null;
			};
			var onSelect = function( event ) {
				$file_upload.trigger( 'click' );
			};
			var onUpload = function( options ) {
				options        = options || {};
				options.file   = options.files[0];
				var file       = options.file;
				var file_name  = file.name;
				var file_size  = file.size;
				$scope.show_message( 'Загрузка: ' + file_name );
				// upload events
				options.onprogress = function( event ) {
					var progress = Math.round( event.lengthComputable ? event.loaded * 100 / event.total : 0 );
					$scope.show_message( file_name + ' - ' + progress + '%' );
					$scope.onProgress({ progress: progress, event: event });
				}
				// upload
				var response = Uploader.upload( options );
				if( response ) {
					response.then(
						// file uploaded
						function( result ) {
							var file_name = result.options.file.name;
							var message = result.response.action.status_message || '';
								message = file_name + ( message && ( ' - ' + message ) );
							$scope.show_message( message );
							$scope.onSuccess({ result: result });
						},
						// file not uploaded
						function( result ) {
							var file_name = result.options.file.name;
							$scope.show_message( file_name + ' - не загружен' );
							$scope.onFail({ result: result });
						});
				// file canceled
				} else {
					var result = { options: options };
					var file_name = result.options.file.name;
					$scope.show_message( file_name + ' - отменен' );
					$scope.onCancel({ result: result });
				}
			}
			$file_upload.bind( 'change', onChange );
			$btn_upload.bind( 'click',  onSelect );
		},
		scope: {
			'onProgress' : '&',
			'onSuccess'  : '&',
			'onFail'     : '&',
			'onCancel'   : '&',
		},
		template:
			'<span class="ngfu-upload-button btn btn-success" ng-bind="message"></span>'
			+ '<input class="ngfu-upload-file" type="file" ng-hide="true">'
		,
	}
});

ng_app_admin.filter( 'orderObjectBy', function( $log ) {
	return function( items, options ) {
		var filtered = [];
		var filter  = this[ options.filter ] || '.*';
		try {
			regexp = new RegExp( filter, 'img' );
		} catch( e ) {
			this[ 'upload_list_filter__status' ] = false;
			return( items );
		}
		this[ 'upload_list_filter__status' ] = true;
		var order   = options.order;
		var reverse = options.reverse;
		angular.forEach( items, function( item ) {
			var found = false;
			angular.forEach( item, function( value ) {
				var result = ( value+'' ).match( regexp );
				if( result ) {
					found = true;
					return;
				}
			});
			if( found ) { filtered.push( item ); }
		});
		filtered.sort(  function (a, b) {
			var result = 0;
			if( a[ order ] == b[ order ] ) {
				result = 0;
			} else {
				result = a[ order ] > b[ order ] ? 1 : -1;
			}
			return( result );
		});
		if( reverse ) { filtered.reverse(); }
		return( filtered );
	};
});

ng_app_admin.controller( '{_ng_controller}', function( UploadApi, $scope, $filter, $log ) {
	$scope.data = {_ng_data};
	$scope._upload_list__count = 0;
	$scope.UploadApi = {
		item__get: function( item ) {
			var result = UploadApi.item__get( item.id );
			result.$promise.then(
				function( r ) {
					$scope.item__get({ response: r.response });
				},
				function( r ) {
					$log.log( 'item->get is fail:', r );
				}
			);
		},
		item__import: function( item ) {
			var result = UploadApi.item__import( $scope.item_data );
			result.$promise.then(
				function( r ) {
					{{-- $scope.item__get({ response: r.response }); --}}
					$log.log( 'item->import is ok:', r );
				},
				function( r ) {
					$log.log( 'item->import is fail:', r );
				}
			);
		},
		list__remove_all: function() {
			var result = UploadApi.list__remove_all();
			result.$promise.then(
				function( r ) {
					$scope.upload_list__update({ response: r.response });
				},
				function( r ) {
					$log.log( 'upload_list->remove_all is fail:', r );
				}
			);
		}
	};
	$scope.item__get = function( result ) {
		$scope.upload_list__update( result );
		if( result.response.action.status ) {
			$scope.action.status_message = 'файл получен';
			$scope.item_data = result.response.action.data;
		} else {
			$scope.action.status_message = 'файл не распознан';
			$scope.item_data = null;
		}
	};
	$scope.upload_list__update = function( result ) {
		_prepare__upload_list( result.response );
		angular.forEach( result.response, function( item, idx ) {
			this[ idx ] = item;
		}, $scope );
	};
	$scope.upload_list__fail = function( result ) {
		var status = result.xhr.status;
		if( status == 413 ) {
			$scope.action = {
				status         : status,
				status_message : 'HTTP-сервер не позволяет загружать очень большие файлы'
			}
		}
		else if( status == 500 ) {
			$scope.action = {
				status         : status,
				status_message : 'PHP-сервер не позволяет загружать очень большие файлы'
			}
		}
		else if( status == 503 ) {
			$scope.action = {
				status         : status,
				status_message : 'PHP-сервер не позволяет выполнять данную операцию'
			}
		}
	};
	// prerape upload list
	var _prepare__upload_list = function( scope ) {
		var count = 0;
		angular.forEach( scope.data._upload_list, function( item, idx ) {
			var time = $filter( 'date' )( item.time * 1000, 'yyyy-MM-dd H:mm:ss' );
			var status = $scope.data._upload_status[ item.status ];
			item[ '_time'   ] = time;
			item[ '_status' ] = status;
			++count;
		});
		$scope._upload_list__count = count;
	};
	// init
	_prepare__upload_list( $scope );
});

// config
ng_app_admin.constant( 'ApiConfig', {
	url: {
		upload      : '{_api_url_upload}',
		upload_list : '{_api_url_upload_list}',
		upload_item : '{_api_url_upload_item}',
	}
});

</script>
