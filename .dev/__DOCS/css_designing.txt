1. Формы.

1.1 Форма для редактирования (editform)

	Формы для редактирования заключаются в такую конструкцию: <div class="editform">{form_body}</div>.
Строки формы (items) представляются параграфами (<p></p>). Заголовки строк заключаются в конструкцию 
<label for="{field_id}">{item header}</label>. У полей input type="text", textarea, checkbox, radio
обязательно указывать атрибут "id", который обязательно должен совпадать с "field_id" атрибута "for" 
для "label". Исключение составляют поля типа "select" для которых "id" присваивается  автоматически и 
равен атрибуту "name" поля "select" c добавлением суффикса "_box".
	При необходимости несколько полей типа "checkbox" или "radio" в столбец (один под другим) их 
необходимо заключать в <span class="vertical"></span>.
	При необходимости вывести информацию во всю ширину строки необходимо использовать <p class="full_width"></p>
	Если при этом строка содержит "checkbox" или "radio" то для корректного отображения в их аттрибутах 
необходимо указать class="simple".
 	Для того чтобы у первого элемента формы не было верхней границы в его аттрибутах должно быть прописано
class="first".
	Кнопки для подтверждения формы, и другие кнопки заключаются в <div class="button_div"></div>
	Примечания под заголовками строк или полями выводятся мелким шрифтом с помощью тега 
<small>{note_text}</small>

	Пример:

		<form method="post" action="{form_action}">
		<div class="editform">
				<p class="first">
					<label for="item_id">First Item</label>
					<input type="text" id="item_id" name="item_name">
				</p>
				<p>
					<input type="checkbox" id="second_item_id" name="second_item_name" value="1">&nbsp;
					<label class="simple" for="second_item_id">Second item with checkbox aligned as fields</label>
				</p>
				<p class="full_width">
					<input type="checkbox" id="third_item_id" name="third_item_name" value="1">&nbsp;
					<label class="simple" for="third_item_id">Third item with checkbox aligned fullwidth</label>
					<br /><small>(note for third item)</small>
				</p>
				<p>
					<label for="fourth_item_box">Fourth item</label>
					{fourth_item_box}
				</p>
				<div class="button_div">
					<input type="submit" name="go" value="Submit" />
				</div>
		</div>
		</form>



1.2 Форма для отображения информации (displayform)

	Формы для отображения информации заключаются в такую конструкцию: <div class="displayform">{form_body}</div>.
Строки формы (items) представляются параграфами (<p></p>). Заголовки строк заключаются в конструкцию 
<label>{item header}</label>. Атрибут "id" можно не указывать.
	При необходимости вывести информацию во всю ширину строки необходимо использовать <p class="full_width"></p>
 	Для того чтобы у первого элемента формы не было верхней границы в его аттрибутах должно быть прописано
class="first".
	Кнопки для подтверждения формы, и другие кнопки заключаются в <div class="button_div"></div>
	Примечания под заголовками строк или полями выводятся мелким шрифтом с помощью тега 
<small>{note_text}</small>

	Пример:

		<form method="post" action="{form_action}">
		<div class="displayform">
				<p class="first">
					<label>First Item</label>
					First item value
				</p>
				<p class="full_width">
					Second item fullwidth
					<br /><small>(note for second item)</small>
				</p>
				<div class="button_div">
					<input type="submit" name="go" value="Submit" />
				</div>
		</div>
		</form>


1.3 Фильтр (filter) (FRAMEWORK)

	Фильтр представляет собой такую конструкцию:

<div class="filter">
<fieldset>
<legend>{t(Filter)}</legend>
<form action='{save_action}' method='post'>
	<div class="column">{left column content}</div>
	<div class="column">{right column content}</div>
	<div class="button_div">{buttons}</div>
</form>
</fieldset>
</div>

{left column content} и {right column content} вертсаются по таким-же правилам как и "editform".


2. Верстка основной структуры (Sexy Hosting)

	Схема основной структуры представляет собой фиксированные по ширине левую и правую колонки и 
растягивающуюся центральную
	Основные элементы:
	- #container - включает в себя все содержимое страницы. На этот элемент можно глобально задавать
ширину содержимого, отступы и поля (относительно окна браузера).
	- #site_header - верхняя часть страницы во всю ширину главного контейнера для размещения логотипа, 
заголовка страницы, и т.д.
	- #site_title - включает в себя заголовок страницы
	- #site_subtitle - включает в себя подзаголовок страницы
	- #below_header - область располагающаяся непосредственно под верхней частью страницы. Используется
для расположения верхнего меню.
	- #menu - включает в себя верхнее навигационное меню
	- #content_wrapper - включает сновное содержимое (левую, правую и центральную колонки)
	- #left_column, right_column, center_column - включают в себя содержимое левой правой и 
центральной частей соответственно.
	- #below_content - располагается в нижней части страницы во всю ширину главного контейнера и содержит, 
например, информацию об авторских правах.
	- #inner - применяется для создания отступов или полей внутри структурных блоков (right-, left- , center 
column, site_header, below_header, below_content)

	Пример:

		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
		<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
		<head>
			<title>SITE_TITLE</title>
		{css}
		{javascript}
		</head>
		<body>
		<div id="container">
			<div id="site_header">
				<div class="inner">
					<div id="site_title">{site_title}</div>
					<div id="site_subtitle">{site_subtitle}</div>
				</div>
			</div>
			<div id="below_header">
				<div class="inner">
					<div id="menu">
		<!-- TOP_SITE_MENU -->
					</div>
				</div>
			</div>
			<div id="content_block">
				<div id="center_column">
					<div class="inner">
		<!-- SITE_NAV_BAR -->
					</div>
					<div class="inner">
		<!-- CENTER_AREA -->
					</div>
				</div>
			</div>
			<div id="left_column">
				<div class="inner">
		<!-- LEFT_AREA -->
				</div>
			</div>
			<div id="right_column">
				<div class="inner">
		<!-- RIGHT_AREA -->
				</div>
			</div>
			<div id="below_content">
				<div class="inner">&copy; Copyright, 1997-2008</div>
			</div>
		</div>
		</body>
		</html>

	Для возможности наследования основных стилей динамическое содержимое встраивается в конструкцию
<div id="{object_name}">{dynamic content}</div>. Тогда наследование в CSS для object="blog" реализуется 
следующим образом:
	p {line-height:2em;} 
	#blog p {line-height:1.2em;} 







